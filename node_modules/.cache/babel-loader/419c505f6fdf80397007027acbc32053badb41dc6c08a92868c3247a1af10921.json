{"ast":null,"code":"var _jsxFileName = \"/home/izaaq/lessons/phase-2-bot-battlr/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotList() {\n  _s();\n  const [bots, setBots] = useState( /* initial list of bots */);\n  const [newBotName, setNewBotName] = useState([]);\n  const [newBotClass, setNewBotClass] = useState([]);\n  // Other state variables for new bot properties\n\n  const handleDelete = botId => {\n    const updatedBots = bots.filter(bot => bot.id !== botId);\n    setBots(updatedBots);\n  };\n  const handleAddBot = () => {\n    // Create a new bot object with the provided details\n    const newBot = {\n      id: '',\n      name: newBotName,\n      bot_class: newBotClass\n      // Other properties for the new bot\n    };\n\n    // Add the new bot to the list of bots\n    setBots([...bots, newBot]);\n\n    // Clear input fields after adding the bot\n    setNewBotName(\"\");\n    setNewBotClass(\"\");\n    // Clear other input fields as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui grid\",\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n        bot: bot,\n        onDelete: handleDelete\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bot Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBotName,\n            onChange: e => setNewBotName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Bot Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newBotClass,\n            onChange: e => setNewBotClass(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        onClick: handleAddBot,\n        children: \"Add Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(BotList, \"xOlpNtkL5XcGFbP+bEQjX8SdNfc=\");\n_c = BotList;\nexport default BotList;\nvar _c;\n$RefreshReg$(_c, \"BotList\");","map":{"version":3,"names":["React","useState","BotCard","jsxDEV","_jsxDEV","BotList","_s","bots","setBots","newBotName","setNewBotName","newBotClass","setNewBotClass","handleDelete","botId","updatedBots","filter","bot","id","handleAddBot","newBot","name","bot_class","children","className","map","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/izaaq/lessons/phase-2-bot-battlr/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\n\nfunction BotList() {\n  const [bots, setBots] = useState(/* initial list of bots */);\n  const [newBotName, setNewBotName] = useState([]);\n  const [newBotClass, setNewBotClass] = useState([]);\n  // Other state variables for new bot properties\n\n  const handleDelete = (botId) => {\n    const updatedBots = bots.filter((bot) => bot.id !== botId);\n    setBots(updatedBots);\n  };\n\n  const handleAddBot = () => {\n    // Create a new bot object with the provided details\n    const newBot = {\n      id: '',\n      name: newBotName,\n      bot_class: newBotClass,\n      // Other properties for the new bot\n    };\n\n    // Add the new bot to the list of bots\n    setBots([...bots, newBot]);\n\n    // Clear input fields after adding the bot\n    setNewBotName(\"\");\n    setNewBotClass(\"\");\n    // Clear other input fields as needed\n  };\n\n  return (\n    <div>\n      <div className=\"ui grid\">\n        {bots.map((bot) => (\n          <BotCard key={bot.id} bot={bot} onDelete={handleDelete} />\n        ))}\n      </div>\n      {/* Modal or form for adding a new bot */}\n      {/* Example of a simple form */}\n      <div className=\"ui form\">\n        <div className=\"fields\">\n          <div className=\"field\">\n            <label>Bot Name</label>\n            <input\n              type=\"text\"\n              value={newBotName}\n              onChange={(e) => setNewBotName(e.target.value)}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Bot Class</label>\n            <input\n              type=\"text\"\n              value={newBotClass}\n              onChange={(e) => setNewBotClass(e.target.value)}\n            />\n          </div>\n          {/* Other input fields for additional bot properties */}\n        </div>\n        <button className=\"ui button\" onClick={handleAddBot}>\n          Add Bot\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default BotList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}